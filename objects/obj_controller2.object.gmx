<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Controller

// DEBUG MODE
global.debug = true;

// Text displays
show_ready = false;
show_player = false;

// Pause
paused = false;
previous_states = ds_list_create();

// Start Timeline
timeline_index = tl_level_start;
timeline_position = 0;
timeline_running = true;

// Initialize Level
level = 1;
event_perform(ev_other, ev_user3); // Load Level Settings
event_perform(ev_other, ev_user1); // Reset Level State

lives = 3;

with (instance_find(obj_menu_button, 0)) image_index = 3;
with (instance_find(obj_menu_button, 1)) image_index = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset Frightened to Original
with (obj_ghost)
{
    if (state == "Frightened")
        state = "Normal";
    if (ai_state == "Wander")
        ai_state = other.level_state;
        
    alarm[0] = -1;
    frightened_is_blue = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Wrap Objects

var xmin = 255;
var xmax = 1207;

with (obj_ghost)
    if (x &lt; xmin) x = xmax;
    else if (x &gt; xmax) x = xmin;

with (obj_pacman)
    if (x &lt; xmin) x = xmax;
    else if (x &gt; xmax) x = xmin;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Load Level Settings

global_dot_counter = 0;
bonus_dot_counter = 0;
did_die_on_level = false;

ini_open("levels.ini");

var level_string = "Level" + string(level);
bonus_symbol = ini_read_string(level_string, "Bonus Symbol", "None");
bonus_points = ini_read_real(level_string, "Bonus Points", 123);
pacman_speed = real(ini_read_string(level_string, "Pac-Man Speed", "123%"));
pacman_dots_speed = real(ini_read_string(level_string, "Pac-Man Dots Speed", "123%"));
ghost_speed = real(ini_read_string(level_string, "Ghost Speed", "123%"));
ghost_tunnel_speed = real(ini_read_string(level_string, "Ghost Tunnel Speed", "123%"));
elroy1dotsleft = ini_read_real(level_string, "Elroy 1 Dots Left", 123);
elroy1dotsspeed = real(ini_read_string(level_string, "Elroy 1 Speed", "123%"));
elroy2dotsleft = ini_read_real(level_string, "Elroy 2 Dots Left", 123);
elroy2dotsspeed = real(ini_read_string(level_string, "Elroy 2 Speed", "123%"));
fright_pacman_speed = real(ini_read_string(level_string, "Fright Pac-Man Speed", "123"));
fright_pacman_dots_speed = real(ini_read_string(level_string, "Fright Pac-Man Dots Speed", "123%"));
fright_ghost_speed = real(ini_read_string(level_string, "Fright Ghost Speed", "123%"));
fright_time = ini_read_real(level_string, "Fright Time", 123);
number_of_flashes = ini_read_real(level_string, "Number of Flashes", 123);
pinky_dot_limit = ini_read_real(level_string, "Pinky Dot Limit", 123);
inky_dot_limit = ini_read_real(level_string, "Inky Dot Limit", 123);
clyde_dot_limit = ini_read_real(level_string, "Clyde Dot Limit", 123);
global_pinky = ini_read_real(level_string, "Global Pinky", 123);
global_inky = ini_read_real(level_string, "Global Inky", 123);
global_clyde = ini_read_real(level_string, "Global Clyde", 123);
timer_limit = ini_read_real(level_string, "Timer Limit", 123);
scatter1 = ini_read_real(level_string, "Scatter1", 123);
scatter2 = ini_read_real(level_string, "Scatter2", 123);
scatter3 = ini_read_real(level_string, "Scatter3", 123);
scatter4 = ini_read_real(level_string, "Scatter4", 123);
chase1 = ini_read_real(level_string, "Chase1", 123);
chase2 = ini_read_real(level_string, "Chase2", 123);
chase3 = ini_read_real(level_string, "Chase3", 123);
chase4 = ini_read_real(level_string, "Chase4", 123);

ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Add a yum, yum bonus fruit

var fruit_x = 731;
var fruit_y = 612;

with (instance_create(fruit_x, fruit_y, obj_bonus_fruit))
{
    if (other.bonus_symbol == "Cherries")
        sprite_index = spr_cherry;
    else if (other.bonus_symbol == "Strawberry")
        sprite_index = spr_strawberry;
    else
        sprite_index = spr_cherry;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Process Dot Eaten

var ghosts;
ghosts[0] = obj_pinky;
ghosts[1] = obj_inky;
ghosts[2] = obj_clyde;
ghosts[3] = obj_blinky;

if (!instance_exists(obj_pellet) &amp;&amp; !instance_exists(obj_power_pellet))
{
    timeline_index = tl_level_complete
    timeline_position = 0;
    timeline_running = true;
    exit;
}

// Reset Evict Ghost Timer
//alarm[2] = 4 * room_speed;

// Bonus Fruit Check
bonus_dot_counter++;
if (bonus_dot_counter == 70 || bonus_dot_counter == 170)
    event_perform(ev_other, ev_user2);

    /*
if (did_die_on_level)
{
    global_dot_counter++;
    if (global_dot_counter == global_pinky &amp;&amp; obj_pinky.ai_state == "Home")
        obj_pinky.ai_state = "Leave Home";
    else if (global_dot_counter == global_inky &amp;&amp; obj_inky.ai_state == "Home")
        obj_inky.ai_state = "Leave Home";
    else if (global_dot_counter == global_clyde &amp;&amp; obj_clyde.ai_state == "Home")
        obj_clyde.ai_state = "Leave Home";
}
else
{
    for (var i = 0; i &lt; array_length_1d(ghosts); i++)
    {
        var ghost = ghosts[i];
        if (instance_exists(ghost))
        {
            if (ghost.ai_state == "Home")
            {
                with (ghost)
                {
                    dot_counter++;
                    if (dot_counter &gt;= dot_counter_limit)
                    {
                        ai_state = "Leave Home";
                        exit;
                    }
                }
            }
        }
    }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_game);

if (show_ready)
{
    draw_set_colour(c_yellow);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_text(731, 612, "READY!");
}
if (show_player)
{
    draw_set_colour(c_aqua);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_text(731, 408, "PLAYER ONE");
}

for (var i = 0; i &lt; lives; i++)
    draw_sprite_ext(spr_pacman, 0, 1241, 51 + i * 51, 0.75, 0.75, 0, c_yellow, 1);

for (var i = 0; i &lt; level; i++)
{
    switch(i)
    {
        case 0:
            draw_sprite_ext(spr_cherry, 0, 1241, 1020 - i * 51, 0.75, 0.75, 0, c_white, 1);
            break;
        case 1:
            draw_sprite_ext(spr_strawberry, 0, 1241, 1020 - i * 51, 0.75, 0.75, 0, c_white, 1);
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Toggle Debug Mode

global.debug = !global.debug;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Toggle Pause

// Do not toggle pause if timeline is running
if (timeline_running)
    exit;

if (paused)
{
    paused = false;
    with (fade)
        instance_destroy();

    with (obj_pacman)
        event_perform(ev_other, ev_user14);    
    with (obj_ghost)
        event_perform(ev_other, ev_user14);
    with (obj_bonus_fruit)
        event_perform(ev_other, ev_user14);

    for (var i = 0; i &lt; instance_number(obj_menu_button); i++)
    {
        var inst = instance_find(obj_menu_button, i);
        inst.depth = -1000;
        remove_tween(inst);
        var dx = inst.xstart - inst.x;
        tween(inst, "x", dx, i * 333 + 333, "ease_in_out");
    }
}
else
{
    paused = true;
    
    with (obj_pacman)
        event_perform(ev_other, ev_user15);   
    with (obj_ghost)
        event_perform(ev_other, ev_user15);
    with (obj_bonus_fruit)
        event_perform(ev_other, ev_user15);
    
    fade = instance_create(0, 0, obj_fade);
    fade.image_alpha = 0;
    tween(fade, "image_alpha", 0.9, 250, "linear");
    
    for (var i = 0; i &lt; instance_number(obj_menu_button); i++)
    {
        var inst = instance_find(obj_menu_button, i);
        remove_tween(inst);
        inst.depth = -1000;
        var dx = inst.xstart - inst.x - inst.sprite_width;
        tween(inst, "x", dx, i * 333 + 333, "ease_in_out");
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
