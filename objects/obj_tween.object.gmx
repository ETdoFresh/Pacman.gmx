<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tweens = ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(tweens);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var i = ds_list_size(tweens) - 1; i &gt;= 0; i--)
{
    var tween_list = ds_list_find_value(tweens, i);
    
    if (!ds_exists(tween_list, ds_type_list))
        continue;

    var curr_time = current_time;
    var value_name = ds_list_find_value(tween_list, 0);
    var delta_value = ds_list_find_value(tween_list, 1);
    var start_time = ds_list_find_value(tween_list, 2);
    var duration = ds_list_find_value(tween_list, 3);
    var easing_option = ds_list_find_value(tween_list, 4);
    var last_delta = ds_list_find_value(tween_list, 5);
    var new_delta = 0;
    
    if (curr_time &gt; start_time + duration)
        curr_time = start_time + duration;
    
    if (curr_time &lt; start_time)
        continue;
        
    switch (easing_option)
    {
        case "linear":
            new_delta = delta_value * (curr_time - start_time) / duration;
            break;
        case "ease_in":
            new_delta = (curr_time - start_time) / duration;
            new_delta = delta_value * new_delta * new_delta;
            break;
        case "ease_out":
            new_delta = (curr_time - start_time) / duration;
            new_delta = -delta_value * new_delta * (new_delta - 2);
            break;
        case "ease_in_out":
            new_delta = (curr_time - start_time) / (duration / 2);
            if (new_delta &lt; 1)
                new_delta = delta_value / 2 * new_delta * new_delta;
            else
            {
                new_delta--;
                new_delta = -delta_value / 2 * (new_delta * (new_delta - 2) - 1);
            }            
            break;
    }
    
    var output = sign(new_delta) * abs(new_delta - last_delta);
    ds_list_replace(tween_list, 5, new_delta);
    
    switch (value_name)
    {
        case "x":
            x += output;
            break;
        case "y":
            y += output;
            break;
        case "image_alpha":
            image_alpha += output;
            break;
        case "image_angle":
            image_angle += output;
            break;
        case "image_blend":
            image_blend += output;
            break;
    }
    
    if (curr_time &gt;= start_time + duration)
    {
        ds_list_delete(tweens, i);
        ds_list_destroy(tween_list);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
